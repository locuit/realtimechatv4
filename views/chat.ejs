<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="css/style.css">
  <title>Document</title>
  <style>
    #users a {
      display: block;
      text-decoration: none;
      padding: 10px;
      color: #000;
      border: 1px solid #ccc;
      margin-bottom: 5px;
      border-radius: 5px;
    }
  
    #users a:hover {
      background-color: #e0e0e0;
    }
  
    #users img {
      border-radius: 50%;
      display: inline-block;
      object-fit: cover;
    }
  
    #users span {
      display: inline-block;
    }
    .modal-content {
  width: 400px; /* Độ rộng của modal */
  padding: 20px; /* Khoảng cách lề bên trong modal */
  background-color: #fff; /* Màu nền của modal */
  border-radius: 5px; /* Độ bo tròn của góc modal */
}

h2 {
  font-size: 24px; /* Kích thước chữ tiêu đề */
  margin-bottom: 20px; /* Khoảng cách dưới của tiêu đề */
}

label {
  display: block; /* Hiển thị theo dạng block để có dòng mới */
  margin-bottom: 5px; /* Khoảng cách dưới của nhãn */
}

input[type="text"],
select {
  width: 100%; /* Độ rộng của input và select */
  padding: 8px; /* Khoảng cách lề bên trong input và select */
  margin-bottom: 15px; /* Khoảng cách dưới của input và select */
  border: 1px solid #ccc; /* Viền của input và select */
  border-radius: 3px; /* Độ bo tròn của góc input và select */
}

select {
  height: 100px; /* Độ cao của select */
}

button[type="submit"],
button[type="button"] {
  padding: 8px 16px; /* Khoảng cách lề bên trong nút */
  margin-right: 10px; /* Khoảng cách phải của nút */
  background-color: #007bff; /* Màu nền của nút */
  color: #fff; /* Màu chữ của nút */
  border: none; /* Bỏ viền của nút */
  border-radius: 3px; /* Độ bo tròn của góc nút */
  cursor: pointer; /* Đổi con trỏ chuột khi di chuột vào nút */
}

button[type="submit"]:hover,
button[type="button"]:hover {
  background-color: #0056b3; /* Màu nền của nút khi hover */
}

.start-icon::before {
      content: "▶️"; /* Biểu tượng start, ví dụ: một biểu tượng tam giác */
    }

    .stop-icon::before {
      content: "⏹️"; /* Biểu tượng stop, ví dụ: một biểu tượng hình vuông */
    }
    .video-call-container {
  display: none;
}


.local-video {
  width: 300px;
  height: 200px;
  margin-bottom: 10px;
}

.remote-video {
  width: 300px;
  height: 200px;
  margin-bottom: 10px;
}
.hidden {
  display: none;
}
  </style>
</head>
<body>
   <div class="chat-container">
      <header class="chat-header">
        <h1>TesseChat</h1>
        <div id="avatar-container" style="display: flex;">
          <img id="avatar" class="myAvatar" src="<%=user.avatar%>" alt="" >
          <a href="./me" data-myUserId="<%=user.id%>" id="userId" class="me"><%= user.fullName%></a>
        </div>
        <form action="./logout" method="post">
          <button class="btn" onclick="logout(`<%=user.id%>`)" >Logout</button>
        </form>
      </header>
      <main class="chat-main">
        <div class="chat-sidebar">
          <h3><i class="fas fa-comments"></i> Room Name:</h3>
          <div class ="chat-sidebar-room">
            <button onclick="showModal()" class="btn">Create New Room</button>
              <ul id="chatRooms" class="rooms">
              <% rooms.forEach(room => { %>
                <li><a href="#" data-roomId="<%=room.id%>"><%= room.roomName %></a></li>
              <% }); %>
              </ul>
          </div>
          <h3><i class="fas fa-users"></i> Users</h3>
          <div class="chat-sidebar-users">
            <ul id="users">
            <% users.forEach(user => { %>
              <li>
                <a href="#" data-userId="<%=user.id%>" id="<%=user.id%>" class="<%=user.status%> === 'online' ? 'online' : 'offline'}">
                  <img src="<%=user.avatar%>" alt="avatar" width="50px" height="50px"/>
                  <span class="username"><%= user.fullName %></span>
                </a>
              </li>
            <% }); %>
            </ul>
          </div>
        </div>
        <div class="chat-messages">
          <div class="video-container hidden" style="position: absolute;">
            <video autoplay class="remote-video" id="remote-video"></video>
            <video autoplay muted class="local-video" id="local-video"></video>
            <button id="end-call-btn" class="btn">End Call</button>
          </div>
        </div>
        <div class="chat-usersOnline">
          <h3>Users Online In Room</h3>
          <ul id="user-InRoom">
          </ul>
        </div>
      </main>
      <div class="chat-form-container">
        <form id="chat-form">
          <input
            id="msg"
            type="text"
            placeholder="Enter Message"
            autocomplete="off"
          />
          <label for="imageInput" class="file-label">
            <span class="file-label-text">Choose Image</span>
          </label>
          <input id="imageInput" type="file" accept="image/*">
          <button id="video-call-btn" class="btn" style="display:none" type="button">Call</button>
          <button id="startStopRecordingButton" class="start-icon btn" type="button"></button>
          <button class="btn"><i class="fas fa-paper-plane"></i> Send</button>
        </form>
    </div>
</body>
<script src="/socket.io/socket.io.js"></script>
<script src="./js/main.js"></script>
<script src="./js/videocall.js"></script>
<script src="./js/voicechat.js"></script>
<script>
  
    var btnRoom = document.getElementById('chatRooms');
    var btnMyUser = document.getElementById('userId').getAttribute('data-myUserId');
    var btnUser = document.getElementById('users');
    btnRoom.addEventListener('click', (event)=>{
      if (event.target.tagName === 'A') {
      const roomId = event.target.getAttribute('data-roomId');
      window.location.href = `./chat?room=${roomId}&user=${btnMyUser}`;
    }
    });
    btnUser.addEventListener('click', function(){
      if (event.target.tagName === 'A') {
        const selectedUserId = event.target.getAttribute('data-userId');
        window.location.href = `./chat?user1=${selectedUserId}&user2=${btnMyUser}`;
    }
    });

    function showModal() {
      var modal = document.createElement('div');
      modal.classList.add('modal'); 
      modal.innerHTML = `
        <div class="modal-content">
          <!-- Nội dung của cửa sổ đè -->
          <h2>Tạo phòng chat</h2>
          <form id="createRoomForm">
            <label for="roomName">Tên phòng chat</label>
            <input type="text" id="roomName" class="createRoomName" name="roomName" placeholder="Nhập tên phòng chat" required>
            <label for="user">Chọn user</label>
            <select name="user" id="user" multiple class="selectUserToRoom">
              <% users.forEach(user => { %>
                <option value="<%=user.id%>"><%= user.fullName %></option>
              <% }); %> 
            </select>
            <button type="submit">Tạo</button>
            <button type="button" onclick="hideModal()">Hủy</button>
          </form>
        </div>
      `;
      document.body.appendChild(modal); // Thêm cửa sổ đè vào trong thẻ body của trang web
      document.getElementById('createRoomForm').addEventListener('submit', (event)=>{
        event.preventDefault();
        const roomName = document.querySelector('.createRoomName').value;
        const selectUsers = document.querySelector('.selectUserToRoom')
        const selectedUsers = Array.from(selectUsers.selectedOptions).map(option => option.value);
        selectedUsers.push(btnMyUser);
        createRoom(roomName, selectedUsers);
      });
    }
    function hideModal() {
      var modal = document.querySelector('.modal'); // Tìm đối tượng div với lớp CSS 'modal'
      modal.parentNode.removeChild(modal); // Xóa cửa sổ đè khỏi thẻ body của trang web
    }
    login(`<%=user.id%>`);
</script>
</html>